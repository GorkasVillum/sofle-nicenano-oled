/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    macros {
        newlinecopath: newlinecopath {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp MINUS &kp SPACE>;
            label = "NEWLINECOPATH";
        };

        apsignout: apsignout {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F3 &kp ENTER &kp S &kp ENTER>;
            label = "APSIGNOUT";
        };
    };

    combos {
        compatible = "zmk,combos";

        apsignout {
            bindings = <&apsignout>;
            key-positions = <0 11>;
            layers = <0>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <10 11>;
            layers = <0>;
        };

        caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <24 25>;
            layers = <0>;
        };

        newlinecopath {
            bindings = <&newlinecopath>;
            key-positions = <5 6>;
            layers = <0>;
        };

        pagedn {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <59 58>;
            layers = <0>;
        };

        up {
            bindings = <&kp UP_ARROW>;
            key-positions = <20 32>;
        };

        downarrow {
            bindings = <&kp DOWN>;
            key-positions = <32 46>;
            layers = <0>;
        };

        leftarrow {
            bindings = <&kp LEFT>;
            key-positions = <32 31>;
            layers = <0>;
        };

        rightarrow {
            bindings = <&kp RIGHT_ARROW>;
            key-positions = <32 33>;
            layers = <0>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <0 12>;
            layers = <0>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <12 24>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <36 24>;
            layers = <0>;
        };

        quicktextcopath {
            bindings = <&kp LA(Q)>;
            key-positions = <0 1>;
            layers = <0>;
        };

        nexthashcopath {
            bindings = <&kp LA(X)>;
            key-positions = <12 13>;
            layers = <0>;
        };

        undo {
            bindings = <&kp LC(Z)>;
            key-positions = <36 37>;
        };

        corcheteL {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <21 22>;
            layers = <0>;
        };

        bracketR {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <23 22>;
            layers = <0>;
        };

        volumeup {
            bindings = <&kp C_VOLUME_UP>;
            key-positions = <6 7>;
            layers = <0>;
        };

        voldown {
            bindings = <&kp C_VOL_DN>;
            key-positions = <18 19>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp GRAVE  &kp N1  &kp N2            &kp N3        &kp N4        &kp N5                                    &kp N6     &kp N7    &kp N8     &kp N9       &kp N0    &kp DELETE
&kp ESC    &kp Q   &kp W             &kp E         &kp R         &kp T                                     &kp Y      &kp U     &kp I      &kp O        &kp P     &kp BSPC
&kp TAB    &kp A   &kp S             &kp D         &kp F         &kp G                                     &kp H      &kp J     &kp K      &kp L        &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X             &kp C         &kp V         &kp B      &kp C_MUTE    &kp PRINTSCREEN  &kp N      &kp M     &kp COMMA  &kp DOT      &kp FSLH  &kp RSHFT
                   &kp LEFT_CONTROL  &kp LEFT_WIN  &kp LEFT_ALT  &mo LOWER  &kp RET       &kp SPACE        &mo RAISE  &kp HOME  &kp END    &kp PAGE_UP
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP C_VOL_DN>,
                <&inc_dec_kp LA(TAB) LA(LS(TAB))>;
        };

        lower_layer {
            label = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans     &kp F1     &kp F2     &kp F3       &kp F4    &kp F5                       &kp KP_DIVIDE    &kp KP_ASTERISK  &kp KP_MINUS     &kp KP_PLUS     &kp PAGE_UP    &kp HOME
&kp GRAVE  &kp N1     &kp N2     &kp N3       &kp N4    &kp N5                       &kp KP_NUMBER_7  &kp KP_N8        &kp KP_NUMBER_9  &kp KP_PLUS     &kp PAGE_DOWN  &kp END
&trans     &kp EXCL   &kp AT     &kp HASH     &kp DLLR  &kp PRCNT                    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_ENTER    &kp UP_ARROW   &kp PAGE_UP
&trans     &kp EQUAL  &kp MINUS  &kp KP_PLUS  &kp LBRC  &kp RBRC   &trans    &trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_ENTER    &kp DOWN       &kp RIGHT
                      &trans     &trans       &trans    &trans     &trans    &trans  &trans           &kp KP_NUMBER_0  &kp KP_DOT       &kp LEFT_ARROW
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            label = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3     &bt BT_SEL 4                     &trans     &trans    &trans    &trans     &trans   &trans
&bt BT_PRV    &bt BT_NXT    &kp PSCRN       &kp UP_ARROW    &trans           &trans                           &kp PG_UP  &trans    &kp UP    &trans     &kp N0   &trans
&kp CAPSLOCK  &kp LALT      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp BACKSLASH                    &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &kp DEL  &kp BSPC
&kp CAPSLOCK  &kp K_UNDO    &kp K_CUT       &kp K_COPY      &kp K_PASTE      &trans         &trans    &trans  &trans     &trans    &trans    &trans     &trans   &trans
                            &trans          &trans          &trans           &trans         &trans    &trans  &trans     &trans    &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            label = "adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                          &none  &none  &none  &none  &none  &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                       &none  &none  &none  &none  &none  &none
&none              &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none                                 &none  &none  &none  &none  &none  &none
&none              &none            &none            &none            &none            &none            &sys_reset    &none  &none  &none  &none  &none  &none  &none
                                    &none            &none            &none            &none            &none         &none  &none  &none  &none  &none
            >;
        };
    };
};
